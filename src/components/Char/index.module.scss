@import "../../utils/styles/variables";

@keyframes avatar_container-anim {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 50% 50%;
  }
  100% {
    background-position: 100% 100%;
  }
}

.root {
  padding: 20px 20px;

  position: relative;
  z-index: 1;
  width: 100%;
  box-sizing: border-box;

  display: grid;
  gap: 20px;
  grid-template-columns: 2fr 5fr;

  border-radius: $borderRadius;

  box-shadow: 0 8px 16px -8px darken($secondaryAccentColor, 80%);
  transition: box-shadow $transitionProps, background-position $transitionProps;

  &:hover {
    &::before {
      background-position: 50% 50%;
    }
  }

  &::before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    border-radius: $borderRadius;
    background: linear-gradient(
      45deg,
      darken($secondaryAccentColor, 10%) 40%,
      darken($primaryAccentColor, 10%) 60%
    );
    background-size: 400% 400%;
    background-position: 0% 0%;

    opacity: 0.7;
    transition: background-position $transitionProps;
  }

  .header {
    align-self: flex-start;
    margin: 0;
    display: flex;

    cursor: pointer;
    box-sizing: border-box;

    transition: opacity $transitionProps, height $transitionProps;

    .avatar_container {
      min-width: 64px;
      min-height: 64px;
      border-radius: 50%;
      padding: 4px;
      box-sizing: border-box;

      background: linear-gradient(
        -45deg,
        transparent,
        $primaryAccentColor,
        transparent,
        $secondaryAccentColor,
        transparent,
        $primaryAccentColor
      );
      background-size: 500% 500%;

      &:hover {
        animation: avatar_container-anim 2s linear infinite;
      }
    }

    .avatar {
      display: block;
      width: 100%;
      object-fit: cover;
      object-position: top center;
      opacity: 1;

      border-radius: 50%;

      transition: transform $transitionProps, opacity $transitionProps 0.02s,
        border-radius $transitionProps;
    }
  }

  .content {
    padding: 10px 0 0;

    position: relative;
    z-index: 1;
    box-sizing: border-box;

    align-self: flex-start;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;

    color: $primaryTextColor;

    transition: height $transitionProps, opacity $transitionProps,
      box-shadow $transitionProps;

    .name {
      max-width: 242px;
      margin: 0;
      padding: 0;
      min-height: 2em;

      font-weight: 500;
      font-size: 24px;
      color: inherit;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;

      cursor: pointer;

      transition: color $transitionProps;

      &:hover {
        color: $primaryAccentColor;
      }
    }

    .info {
      transition-delay: 0.2s;
      transition: visibility $transitionProps, opacity $transitionProps;
      list-style-type: none;
      margin: 0;
      padding: 0;

      display: flex;
      flex-direction: column;
      gap: 8px;

      li {
        margin: 0;
        padding: 0;

        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 4px;

        span {
          font-weight: 600;
          text-align: right;
        }
      }

      .gender {
        color: darken($primaryAccentColor, 10%);
        font-size: 18px;
        font-weight: 600;
      }
    }

    .moreButtonContainer {
      padding: 22px 0;
      margin: 0 auto;
    }
  }

  @media screen and (max-width: $tablet) {
    padding: 20px;

    .content {
      .name {
        max-width: 168px;
      }
    }
  }

  @media screen and (max-width: $phone) {
    padding: 10px;

    grid-template-columns: 1fr;

    .header {
      .avatar_container {
        min-width: 260px;
        min-height: 260px;
      }
    }

    .content {
      padding: 0;
      .name {
        max-width: 250px;
      }

      .moreButtonContainer {
        padding: 42px 0;
      }
    }
  }
}
